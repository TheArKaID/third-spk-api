name: Development

on:
  push:
    branches:
      - development

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ vars.GAR_LOCATION }}
  GKE_CLUSTER: ${{ vars.GKE_DEV_CLUSTER_NAME }}
  GKE_ZONE: ${{ vars.GKE_DEV_CLUSTER_LOCATION }}
  NAMESPACE: ${{ vars.GKE_DEV_NAMESPACE_NAME }}
  REGISTRY_NAME: ${{ vars.GKE_DEV_REGISTRY_NAME }}
  REPOSITORY_NAME: ${{ github.event.repository.name }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: on-premise-github-runner
    steps:
      - name: Prepare Variables
        run: |
          echo "DEPLOYMENT_NAME=${REPOSITORY_NAME}-deployment" >> $GITHUB_ENV
          echo "IMAGE_NAME=${REPOSITORY_NAME}-service" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v3
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: access_token
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      - name: Docker login
        run: |-
          echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
      - name: Build image
        run: |-
          echo "building image with tag name = $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE_NAME:$GITHUB_SHA"
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE_NAME:$GITHUB_SHA" \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE_NAME:latest" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
      - name: Push image to Artifact Registry
        run: |-
          echo "pushing image to $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE_NAME:$GITHUB_SHA"
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE_NAME:$GITHUB_SHA"
          echo "pushing image to $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE_NAME:latest"
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE_NAME:latest"
      - name: Set up Kustomize
        run: |-
          ls
          echo "go to $NAMESPACE directory"
          cd ./build/$NAMESPACE
          echo "Install Kustomize"
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
      - name: Deploy
        run: |-
          echo "Run Kustomize and kubectl"
          cd ./build/$NAMESPACE
          ./kustomize edit set image IMAGE_NAME=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REGISTRY_NAME/$IMAGE_NAME:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          echo "Rollout kubectl"
          kubectl rollout status deployment/$DEPLOYMENT_NAME -n $NAMESPACE
          kubectl get services -o wide
